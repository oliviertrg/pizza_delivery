services:
  app:
    build: ./app/
    container_name: orders-server
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    ports:
      - 8001:8001
    volumes:
      - .:/work
    depends_on:
      - postgres

  warehouse_server:
    build: ./warehouse_server/
    container_name: warehouse_server
    command: uvicorn warehouse_server.main:app --host 0.0.0.0 --port 8000 --reload
    ports:
      - 8000:8000
    volumes:
      - .:/work2
    depends_on:
      - postgres-warehouse
  
  postgres:
    build: ./db_orders/
    ports:
      - 54322:5432
    restart: always
    env_file:
      - ./.env

  postgres-warehouse:
    build: ./db-warehouse/
    ports:
      - 54323:5432
    restart: always
    env_file:
      - ./warehouse.env
  zookeeper:
    image: 'bitnami/zookeeper:3.7.0'
    container_name: zookeeper
    ports:
      - '2181:2181'
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    volumes:
      - ./bitnami/zookeeper:/bitnami/zookeeper

  kafka:
    image: 'bitnami/kafka:2.8.0'
    container_name: kafka
    ports:
      - "9093:9093"
    expose:
      - "9093"
    environment:
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_CREATE_TOPICS="kafka_capstone_event_bus:1:1"
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CLIENT:PLAINTEXT,EXTERNAL:PLAINTEXT
      - KAFKA_CFG_LISTENERS=CLIENT://:9092,EXTERNAL://:9093
      - KAFKA_CFG_ADVERTISED_LISTENERS=CLIENT://kafka:9092,EXTERNAL://host.docker.internal:9093
      - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=CLIENT
      - ALLOW_PLAINTEXT_LISTENER=yes
           
    depends_on:
      - zookeeper
    volumes:
      - ./bitnami/kafka:/bitnami/kafka

  # kafdrop:
  #   image: obsidiandynamics/kafdrop
  #   container_name: kafdrop
  #   ports:
  #    - "9000:9000"
  #   environment:
  #     KAFKA_BROKERCONNECT: "kafka:9092"
  #     JVM_OPTS: "-Xms16M -Xmx48M -Xss180K -XX:-TieredCompilation -XX:+UseStringDeduplication -noverify"
  #   depends_on:
  #     - kafka

  